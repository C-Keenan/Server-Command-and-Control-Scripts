#!/usr/bin/env bash
if [ "$EUID" -eq 0 ]
then
  logd=/var/log/servinit
  systemctl stop servinit
  cp -r ./bash /usr/local/servinit
  cp -r ./messages /usr/local/servinit
  cp ./servinit.service /etc/systemd/system
  chmod +x /usr/local/servinit/bash/*
  if [ -f /etc/.bash_aliases ]
  then
    echo "alias restart='bash /usr/local/servinit/bash/restart-systemd-service'" >> /etc/.bash_aliases
    echo "alias timer='bash /usr/local/servinit/bash/timer'" >> /etc/.bash_aliases
  elif ! [ -f /etc/.bash_aliases ]
  then
    touch /etc/.bash_aliases
    echo "alias restart='bash /usr/local/servinit/bash/restart-systemd-service'" >> /etc/.bash_aliases
    echo "alias timer='bash /usr/local/servinit/bash/timer'" >> /etc/.bash_aliases
  fi
  grep -F 'if [ -f /etc/.bash_aliases ]' /etc/bash.bashrc
  if [ $? -eq 0 ]
  then
    echo "Entry exists. Skipping addition."
  elif [ $? -eq 1 ]
  then
    echo "Entry does not exist. Adding now."
    echo "if [ -f /etc/.bash_aliases ]; then" >> /etc/bash.bashrc
    echo "    . /etc/.bash_aliases" >> /etc/bash.bashrc
    echo "fi" >> /etc/bash.bashrc
    echo "Entry added."
  fi
  echo "Updated necessary files. Starting service."
  systemctl daemon-reload 2>>$logd\/errors.log >> $logd\/standard.log
  systemctl start servinit 2>>$logd\/errors.log >> $logd\/standard.log
  if [ $? -eq 0 ]
  then
    echo "The service has been restarted. Check the /var/log/servinit directory for logs."
  elif [ $? -eq 1 ]
  then
    echo "Servinit service not properly restarted. Please run 'systemctl status servinit' to investigate."
  fi
else
  echo "Not running as 'root' user! Please run as 'root' to properly start and install this service."
fi
