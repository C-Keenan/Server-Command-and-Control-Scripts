#!/usr/bin/env bash
if [ "$EUID" -eq 0 ]
then
  if [ ! -d /usr/local/servinit ]
  then 
    mkdir -p /usr/local/servinit
  fi
  if [ ! -d /var/log/servinit ]
  then 
    mkdir -p /var/log/servinit
  fi
  cp -r ./bash /usr/local/servinit
  cp -r ./messages /usr/local/servinit
  cp ./servinit.service /etc/systemd/system
  chmod +x /usr/local/servinit/bash/*
  bash /usr/local/servinit/bash/dep-installer
  if [ -f /etc/.bash_aliases ]
  then
    echo "alias restart='bash /usr/local/servinit/bash/restart-systemd-service'" >> /etc/.bash_aliases
  elif ! [ -f /etc/.bash_aliases ]
  then
    touch /etc/.bash_aliases
    echo "alias restart='bash /usr/local/servinit/bash/restart-systemd-service'" >> /etc/.bash_aliases
  fi
  grep -F 'if [ -f /etc/.bash_aliases ]' /etc/bash.bashrc
  if [ $? -eq 0 ]
  then
    echo "Entry exists. Skipping addition."
  elif [ $? -eq 1 ]
  then
    echo "Entry does not exist. Adding now."
    echo "if [-f /etc/.bash_aliases ]; then" >> /etc/bash.bashrc
    echo "    . /etc/bash_aliases" >> /etc/bash.bashrc
    echo "fi" >> /etc/bash.bashrc
    echo "Entry added."
  fi
  echo "Installed necessary files to the 'proper' directories. Starting service."
  echo "Please ensure you have added ${USER}'s ssh public key to the host system for 'backup' function to work properly."
  systemctl daemon-reload
  systemctl enable servinit 2>>./errors.log
  systemctl start servinit 2>>./errors.log
  if [ $? -eq 0 ]
  then
    echo "The service has been started and enabled. Check the /var/log/servinit directory for logs."
  elif [ $? -ge 1 ]
  then
    echo "Servinit service not properly started. Please run 'systemctl status servinit' to investigate."
  fi
else
  echo "Not running as 'root' user! Please run as 'root' to properly start and install this service."
fi
